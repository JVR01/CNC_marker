>rosrun cnc_marker manager.py

-This one executes a thread in background that awaits for a keyboard input. When entered a valid word, it publisches the text under "/keyboard"

-It also hears incomming message through  "/manager_listener std_msgs/String"
-the /status topics says nothing 


>rosrun cnc_marker GcodeGenerator
>rosrun cnc_marker GcodeGenerator /home/toby001/catkin_ws/src/cnc_marker/src/Characters/ /home/toby001/catkin_ws/src/cnc_marker/
>RASPI->rosrun cnc_marker GcodeGenerator /home/tamer/ros_catkin_ws/src/CNC_marker/src/Characters/ /home/tamer/ros_catkin_ws/src/CNC_marker/


-this one hears and waits for "/keyboard" topic. 
- If the message is valid "input_valid(std::string message)", it executes the function: "generate_code(message)"



>rosrun cnc_marker gCodeSender.py -p /dev/ttyUSB0 -f /home/tamer/ros_catkin_ws/src/CNC_marker/OutputFile.ngc
>rosrun cnc_marker gCodeSender.py -p /dev/ttyUSB0 -f /home/toby001/catkin_ws/src/cnc_marker/OutputFile.ngc


or just:
>roslaunch cnc_marker Marker.launch
>roslaunch cnc_marker Marker.launch RPI1:=ARG1 RPI2:=ARG2
>roslaunch cnc_marker demo.launch


sudo apt install sshfs
sshfs tamer@192.168.2.109: pi
ssh tamer@192.168.2.109
sudo apt-get install python-is-python3   ->to be able to run Python code in Python3 (not really, but he knows python)




#Launch on startUp  --> see /Documents/Experiments/howToStarUp.txt  in the gpio example
#http://wiki.ros.org/robot_upstart   ----Package installed
#DOCU   ----https://roboticsbackend.com/make-ros-launch-start-on-boot-with-robot_upstart/
on the raspberry
>rosrun robot_upstart install cnc_marker/launch/Marker.launch
wont work, enable service  first!

>rosrun robot_upstart install cnc_marker/launch/Marker.launch --job cnc --symlink
>sudo systemctl daemon-reload && sudo systemctl start CNC_MARKER
> sudo systemctl start CNC_MARKER.service

sudo systemctl stop CNC_MARKER.service

#sudo systemctl disable gpioTest.service

#get the log
>journalctl -u cnc.service -b



